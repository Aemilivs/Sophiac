@page "/collections/view/{CollectionFileName?}"

<div id="collection">
    <div id="collection-title">@_collection.Title</div>
    <div id="collection-form">
        <EditForm Model="@_collection" OnValidSubmit="@SubmitAsync">
            <DataAnnotationsValidator />
            <div id="collection-form-title">
                <label>Title of colleciton</label>
                <InputText id="collection-title" @bind-Value="@_collection.Title"></InputText>
                <ValidationMessage For="@(() => _collection.Title)"></ValidationMessage>
            </div>
            <div id="collection-form-create-question" type="button" @onclick="CreateQuestion">Add a question</div>
            <div id="collection-form-questions">
                @foreach (var question in _collection.Questions)
                {
                    <div class="question" @key="question">
                        <div class="question-type">
                            @*TODO Implement a dropdown to change question type.*@
                        </div>
                        <div class="question-title">
                            <label>Title of question</label>
                            <InputText class="question-title" @bind-Value="@question.Title"></InputText>
                            <ValidationMessage For="@(() => question.Title)"></ValidationMessage>
                        </div>
                        @*TODO Add markup editor with the support of images.*@
                        <div class="question-description">
                            <label>Description of question</label>
                            <InputText class="question-description" @bind-Value="@question.Description"></InputText>
                            <ValidationMessage For="@(() => question.Description)"></ValidationMessage>
                        </div>
                        <div class="question-create-answer" @onclick="() => question.CreateAnswer()">Add Answer</div>
                        <div class="question-answers">
                            @foreach (var answer in question.Answers)
                            {
                                <div class="answer" @key="answer">
                                    <div class="answer-content">
                                        <label>Answer</label>
                                        <InputText class="answer-content-input" @bind-Value="answer.Content"></InputText>
                                        <ValidationMessage For="@(() => answer.Content)"></ValidationMessage>
                                    </div>
                                    <div class="answer-points">
                                        <label>Amount of points for selecting this question</label>
                                        <InputNumber class="answer-points-input" @bind-Value="answer.Points"></InputNumber>
                                        <ValidationMessage For="(() => answer.Points)"></ValidationMessage>
                                    </div>
                                </div>
                                <div class="answer-delete" @onclick="() => question.DeleteAnswer(answer)">Delete Answer</div>
                            }
                        </div>
                        <div class="question-delete" @onclick="() => DeleteQuestion(question)">Delete Question</div>
                    </div>
                }
            </div>
            <div id="collection-form-submit">
                <button type="submit">Submit</button>
            </div>
        </EditForm>
    </div>
</div>